== Netzwerk ==

=== DNS rzl.so ===
Alle internen Dienste enden auf .rzl, was keine Domain ist, die uns gehört. Wäre cool, wenn das stattdessen .rzl.so wäre.

→ Split-DNS?

--[[Benutzer:Helix|Helix]] ([[Benutzer Diskussion:Helix|Diskussion]]) 14:35, 27. Dez. 2019 (CET)

=== SSL-Zertifikate ===
Für nur intern verfügbare Dienste wäre auch ein SSL-Zertifikat sinnvoll.

Letsencrypt *.rzl.so würde die internen Dienste dann nicht nach [https://crt.sh crt.sh] | [https://www.entrust.com/ct-search/?domain=raumzeitlabor.de&includeExpired=true&exactMatch=false entrust.com/ct-search] leaken, daher würde ich das vorschlagen.

Für extern verfügbare Dienste kann man dann ja je FQDN ein normales Cert holen. Eventuell auf [https://letsencrypt.org/docs/rate-limits/ Rate Limits] aufpassen.

--[[Benutzer:Helix|Helix]] ([[Benutzer Diskussion:Helix|Diskussion]]) 14:35, 27. Dez. 2019 (CET)

=== Inventur Internetleitung ===

Welche Leitungen haben wir, welche Möglichkeiten zum Upgrade gibt es?<br />
-Lordeis-
Aktuelle Leitung: 
                  Telekom Hybrid 50Mbit
                  16 Mbit DSL
                  Rest geht über im Router verbaute Sim Karte (Nur mit Telekom Router Kompatibel)

Geimeinsame klärung mit der Spedition erstrebenswert.

=== Holzwerkstatt ===

Braucht das Netzwerk? V.a. braucht das Netzwerk langfristig?<br />
Gespräch mit Spike am Dienstag 10.12.19 -Lordeis

=== Freifunk + IPv6 ===

Zukunft ab 01.01.2020? Kübler Glasfaser?<br />
Fürs erste wenn möglich über das /56 Netz dass am Telekom Router anliegt. -Lordeis

=== Switches ===
Inventur aller Switche und Firmware Stand prüfen 

==== Cisco Stack E Werkstatt ====
Update von Cisco verfügbar: '''1.4.11.02'''<br />
Diskussion ob Update durchgeführt werden soll? -Lordeis

=== Router ===
==== Ubiquity ====
Auseinandersortieren der Netzwerkverbindungen.<br />
Reverse Engineering und Dokumentieren der Konfiguration.
IPv6 Konfiguration.

==== Speedport (Telekom) ====
Reverse Engineering und Dokumentieren der Konfiguration.
IPv6 Konfiguration.

Kommentar Ranlvor: Sollte ziemlich Standard sein, nur eventuell ein paar Regeln drin, die versuchen sollen Telefonie-Traffic auf DSL zu zwingen (weil das weniger schlecht tut als via LTE).

=== WIFI Access Points ===
==== Ubiquity ====
Reverse Engineering und Dokumentieren der Konfiguration.<br />
Auseinadersortieren der SSIDs:
                              Prüfen ob alle SSIDs nötig sind.                              
                              Diskutieren ob Band Steering Sinvoll Wäre.
                              Prüfen ob Layer 3 Roaming Sinnig ist.

Prüfung ob ein zusätzlicher Unify AP für die Werkstatt sinn macht.<br />
Auslagern des RZL IOT WLAN auf anderen AP.

==== IOT Accesspoint ====
Extra AP verwenden da Performance Probleme.<br />
Ich habe noch einen Lancom Rumliegen den ich Spenden würde? -Lordeis

== Hypervisor ==

=== RAM ===

Welche Möglichkeiten zum Update gibt es? Kurzfristiger Punkt, da der RAM erschöpft ist. AUf jeden Fall mögliches Upgrade wären zusätzliche 4 GiB für 30-40 Euronen, wenn wir in den Server reingeschaut haben wissen wir aber ob noch mehr als die dann 16GiB gehen.

Aktuelles To-Do: Dokumentation Hardwaremöglichkeiten - [[Benutzer:0xb4dc0d3d|0xb4dc0d3d]]

=== Rechtekonzept ===

User sollten ihre VMs durchstarten können. Geht Hand in Hand mit dem Gedanken, nicht mehr überall als root zu springen und alles als root zu tun, stattdessen Nutzung sudo und mittelfristig ggf. Anbindung an [[#UserDB|UserDB]].

Person mit Hut: [[Benutzer:0xb4dc0d3d|0xb4dc0d3d]]

=== VM-Inventur ===

Prüfen, was noch aktiv ist, und nach einer geordneten(!) Inventarisierung Mitglieder bei Bedarf anschreiben. Im Zweifelsfall Downtime und einen Zeitraum X auf Reaktion warten.

=== VM-Struktur ===

Ordnung schaffen: Sind Dinge(tm) produktiv, sollten diese auf dedizierte VMs, gutes Beispiel hier: [[cashdesk.rzl]] (leider auch gutes Beispiel für undoumentierte VM).

Kommentar Ranlvor: cashdesk ist ein schlechtes Beispiel, da das eigentlich mal eine MemberVM war und neben cashdesk auch den Infoscreen hosted.

=== Serverhardware ===

Zukunft: Redundanz? Idee: KVM over 2 Nodes mit GlusterFS. Keinen DAU-kompatiblen Kram wie oVirt, wir sollten bei KVM bleiben.

== UserDB ==

Redundanter Punkt. Vielleicht realisieren wir in NOC-Kommunikation etwas und führen das dann zusammen.

== Mailserver ==

=== Spamfilter ===

Überarbeitung und Erweiterung. Wir bekommen keine Viagramails, aber einiges an Werbung. ''Erst'' Spamfilter, ''dann'' Unterpunkt Blocklisten ;-)
