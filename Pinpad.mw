{{ProjektInfoBox
|name        = Pinpad
|status      = stable
|image       = Status-maemo-widget.png
|imagesize   = 90
|description = Zugang zum RZL
|author      = [[Benutzer:SEC|sECuRE]], [[Benutzer:Alexander_Brock|AlexanderB]]
|username    = 
|version     = 
|update      = 
|platform    = 
|license     = 
|download    = 
}}

== Status ==

Das Pinpad ist seit dem 23.11.2010 in Benutzung. Zum Öffnen der Tür hat jedes Mitglied eine persönliche PIN, die man auf http://blackbox.raumzeitlabor.de/BenutzerDB/ einsehen kann. Wer noch keine PIN hat, kann sie bei [[Benutzer:SEC|sECuRE]] beantragen.

Zum Abschließen des Raums gibt man die Pin 666, gefolgt von der Rautetaste ein.

In Arbeit ist derzeit das [[Pinpad/Frontendv2]].

== Überblick ==

Das Pinpad besteht aus mehreren Teilen:

* Das Frontend hängt draußen vor der Tür. Es wird separat mit Strom versorgt und kommuniziert via RS232 mit dem Pinpad-Controller innen. Im Frontend steckt keine Logik, es ist nur Benutzerschnittstelle nach außen.
* Der Pinpad-Controller befindet sich innen, oben auf dem Schrank direkt neben der Tür. Er nimmt am [[Hausbus]] teil und stellt dort den Türstatus zur Verfügung. Weiterhin steuert er den HomeTec++ an um die Tür zu entriegeln und verriegeln.
* Der HomeTec++ ist eine Platine, welche die beiden Motoren im HomeTec-Türschloss steuert (die originale Elektronik fanden wir ungeeignet).
* Auf der Blackbox läuft die Benutzerdatenbank. Dort läuft auch eine Software, welche via Hausbus PIN-Eingaben validiert und die Tür öffnet (Benutzer-PINs). Der Pinpad-Controller hat noch eine hardcoded PIN, sofern die Blackbox oder der Hausbus aus irgendwelchen Gründen nicht funktioniert. Geplant ist hier eine Synchronisation.

== Details ==

=== Frontend ===

Die Firmware befindet sich auf https://github.com/raumzeitlabor/pinpad/tree/master/firmware-aussen

[[Kategorie:Projekt]]

=== HomeTec++ ==

Schaltplan, Layout, Firmware befinden sich auf https://github.com/raumzeitlabor/pinpad/tree/master/hometecpp

Das HomeTec++ kommuniziert via PWM (zwei Leitungen, die jeweils über die Pulsweite einen Zustand empfangen bzw. senden) mit dem Pinpad-Controller, da wir keine seriellen Schnittstellen mehr frei hatten.
