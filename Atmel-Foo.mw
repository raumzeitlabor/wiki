{{ProjektInfoBox
|name        = Atmel-Foo
|status      = experimental
|image       = atmel-foo.jpg
|description = Programmier- und Debugbox für ATMega8 und andere Atmel-ISP-Mikrokontroller
|author      = [[Benutzer:Nessi|Nessi]], [[Benutzer:Felicitus|Felicitus]]
|username    = 
|version     = 
|update      = 
|platform    = Atmel AtMega8
|license     = 
|download    = 
}}

= Atmel-Foo =

Ein Programmieradapter und Debugbox für ATMega8-Mikrokontroller. Gehäuse stammt von einem ausgedienten Cisco 1000 Router.

== Warum ? ==

=== Breadboard-Problematik ===
Werden neue Projekte mit Atmega8-Prozessoren begonnen, so kommt es desöfteren vor, daß man die Schaltung zunächst einmal auf einem [http://de.wikipedia.org/wiki/Steckplatine Breadboard] aufbaut. Auf dieses Breadboard kann man natürlich keinen [ww.mikrocontroller.net/articles/AVR_In_System_Programmer#ISP ISP-Stecker] stecken, da der Stecker 2-reihig ausgeführt ist. Dafür braucht man also einen Adapter.

=== Ständiges Neu-Verbinden bei Programmierung ===

Egal, ob man eine Schaltung auf Breadboard oder Platine hat - möchte man den Atmega8 neu programmieren, so sollte man nach der Programmierung den Programmieradapter trennen (oder den Jumper auf dem Adapter umstecken), da dieser die Leitungen SS und RESET brückt. Außerdem sollte die Versorgungsspannung nur von einer Quelle kommen. Dies kann bei häufigem Neuprogrammieren in einer Kabel-Rein-Raus-Orgie enden. Schön wäre daher ein Schalter, mit dem man einfach die Programmierleitungen MOSI, MISO, SCK und SS sowie die Stromversorgungsleitung und ggf. die Verbindung von SS auf RESET mittels Kippschalter trennen kann.

=== Überprüfung eines Atmega8 auf Funktion / Fuses Recovern ===

Findet man einen Atmega8 in einer $Kiste und möchte diesen auf Funktion testen, oder gar einen fremden Atmega8 retten, so muß man diesem normalerweise in eine Zielschaltung eingebaut werden. Schön wäre es daher, einfach einen IC-Sockel zu haben, in den man den Atmega8 steckt, um dann zusätzlich einen Oszillator oder eine externe Taktquelle zuschalten zu können.

=== Debugging auf der Zielplatine ===

Außerdem ist es schwierig, in einer bestehenden Schaltung auf Platine zu debuggen. Schön wäre es, wenn man einfach alle Pins des Atmega8 herausführen könnte, ohne die Funktion der Schaltung zu beeinflussen.

== Was macht's? ==

Der Atmel-Foo ist eine Programmierschnittstelle / Pin-Herausführung für Atmel-Microcontroller mit Funktionen, die während der Entwicklung von Schaltungen mit der Atmel-Mikroprozessorserie benötigt werden. Hierbei kann
der Mikroprozessor (nur Atmega8) direkt auf dem Gerät eingesteckt und programmiert werden, oder der Atmel-Foo kann mit der Zielplatine verbunden werden.

Wird der Atmel-Foo direkt mit der Zielplatine verbunden, so können die Pins, die für Programmierung via ISP nötig sind, abgeschalten werden (S2). Die Versorgungsspannung kann vom Programmer zum Ziel-Atmel zu-/abgeschalten werden (S1). Die seriellen Ports (RXD/TXD) können vom Ziel-Atmel zum Programmer zwecks Debugging durchgeschalten werden. Außerdem kann der Reset-Pin vom SS-Pin getrennt werden (S5).

Wird der Ziel-Atmel direkt auf den Atmel-Foo gesteckt, so kann man wählbare Oszillatoren (S6) mittels dem OSC Active-Schalter (S4) aktiviert werden.

== Funktionen ==

* Durchschaltung VCC vom Programmer zum Ziel-IC/Ziel-Platine (S1)
* Durchschaltung ISP-Pins (MOSI/MISO/SS/SCK) vom Programmer zum Ziel-IC/Ziel-Platine (S2)
* Durchschaltung RXD/TXD-Ports vom Programmer zum Ziel-IC/Ziel-Platine (S3)
* Durchschaltung OSC vom Atmel-Foo zum Ziel-IC (z.B. um Atmels direkt zu programmieren, wenn Ext.Osc Fuse gesetzt) (S4)
* Durchschaltung Reset-Pin zu SS (S5)
* Liefert diverse Oszillator-Geschwindigkeiten (S6)
* 6- und 10-poliger Ausgang zur Zielplatine, mit Adaptern für z.b. Breadboards
* IC-Sockel für Atmega-8 Mikrokontroller für die Direktprogrammierung
* Herausführung aller sinnvollen Pins als 4mm Buchsen zum Anschluss von z.b. Oszilloskop

== Beschreibung ==

== Steckerbelegung Netzteil ==

Pin 1 und 2 sind belegt. Wir wissen im Moment nicht, wo Plus und Minus ist. Werden wir aber rausfinden.

== Fehlende Bauteile ==

1x 6pol und 1x 10pol Pfostenbuche für Verbindungskabel 0,40 eur
1x USB-B Stecker stehend? Reichelt-Nr USB BG 0,20 eur
2x Wannenstecker und 2x Pfostenbuchse jeweils 6pol für Verbindung USB-Stecker->Mainboard? Reichelt WSL 6G und PFL 6 Kostet zusammen ca. 1 Eur
1x Textool-Sockel 28 Pol (Reichelt TEX 28) 4,95

Steckverbindung vom Mainboard zu Platine mit IC-Sockel?

[[Kategorie:Projekt]]
